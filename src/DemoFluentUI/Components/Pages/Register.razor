@page "/register"
@rendermode RenderMode.InteractiveServer
@inject IDialogService DialogService
@inject IToastService ToastService

<PageTitle>New user</PageTitle>

<FluentLabel Typo="Typography.PageTitle">Register</FluentLabel>

<FluentLabel Style="margin-bottom: 24px;">
    Let's get you all set up so you can verify your personal account and begin
    setting up your profile.
</FluentLabel>

<EditForm Model="@Data" OnValidSubmit="ValidHandlerAsync">
    <FluentTextField Label="First name:"
                     Placeholder="Enter your first name"
                     Required
                     @bind-Value="@Data.FistName" />
    <FluentTextField Label="Last name:"
                     Placeholder="Enter your last name"
                     @bind-Value="@Data.LastName" />
    <FluentDatePicker Label="Birth date:"
                      @bind-Value="@Data.BirthDate" />
    <FluentTextField Label="EMail:"
                     TextFieldType="TextFieldType.Email"
                     Required
                     Placeholder="Enter your email"
                     @bind-Value="@Data.Email" />

    <FluentAutocomplete TOption="Country"
                        Label="Select a country"
                        Width="250px"
                        Placeholder="Select countries"
                        OnOptionsSearch="@OnSearchAsync"
                        MaximumSelectedOptions="1"
                        OptionText="@(i => i.Name)"
                        @bind-SelectedOptions="@Data.Countries">

        <OptionTemplate Context="country">
            @country.HtmlFlagAndName
        </OptionTemplate>

        <MaximumSelectedOptionsMessage>
            Please select only one country.
        </MaximumSelectedOptionsMessage>
    </FluentAutocomplete>

    <br />
    <FluentCheckbox Label="I agree to all terms, conditions, privacy policy."
                    @bind-Value="@AcceptToCreate" />

    <div style="margin: 24px 0px;" />

    <FluentButton Appearance="Appearance.Accent"
                  Loading="@Loading"
                  Disabled="@(!AcceptToCreate)"
                  Type="ButtonType.Submit">
        Create account
    </FluentButton>
</EditForm>

<style>
    form fluent-text-field {
        margin-bottom: 24px;
    }
</style>

@code {
    private RegisterUser Data = new();
    private bool AcceptToCreate = false;
    private bool Loading = false;

    private async Task ValidHandlerAsync()
    {
        Loading = true;

        // Simulate asynchronous loading
        await Task.Delay(1000);

        // Confirmation
        // await DialogService.ShowInfoAsync(
        //             message: "Your account has been successfully created",
        //             title: "New user");

        // await DialogService.ShowDialogAsync<AccountCreatedDialog>(new DialogParameters()
        //     {
        //         Title = "New user",
        //     });

        ToastService.ShowSuccess("Your account has been successfully created");

        Loading = false;
    }

    // Add this new method
    private async Task OnSearchAsync(OptionsSearchEventArgs<Country> e)
    {
        e.Items = Country.All.Where(i => i.Name.StartsWith(e.Text,
                                                StringComparison.OrdinalIgnoreCase))
                            .OrderBy(i => i.Name);

        await Task.CompletedTask;
    }

    public class RegisterUser
    {
        public string? LastName { get; set; }
        public string? FistName { get; set; } = "Denis";
        public DateTime? BirthDate { get; set; }
        public string? Email { get; set; } = "dvoituron@microsoft.com";
        public IEnumerable<Country> Countries { get; set; } = Array.Empty<Country>();
    }
}